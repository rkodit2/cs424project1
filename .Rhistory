qnorm(.85)
qnorm(12.5)
qnorm(.125)
qnorm(87.5)
qnorm(.875)
qnorm(.3483)
qnorm(.0838)
qnorm(0)
qnorm(.4808)
qnorm(.9808)
qnorm(.0000)
qnorm(.9476)
qnorm(.0262
5
qnorm(.0262)
qnorm(-2.16)
qnorm(.85)
qnorm(.10)
qnorm(.90)
qnorm(.89)
qnorm(.15)
qnorm(.10)
qnorm(.1977)
qnorm(.1788)
library(swirl)
swirl()
2+7
qnorm(-6.97)
?z-score
qnorm(.02375)
qnorm(.024)
qnorm(.975)
qnorm(.005)
qnorm(.995)
qnorm(.025)
qnorm(.99)
qnorm(.9875)
qnorm(.05)
qnorm(.025)
qnorm(.01)
qnorm(.04)
qnorm(.0197)
qnorm(.0427)
pt(.442, df=19)
qt(.025,29)
qt(.025,13)
qt(.0125,8)
qt(.05,25)
qt(.025,12)
qt(.005,13)
qt(.05,9)
qt(.005,9)
qt(.01,9)
qt(.10,9)
qt(.05,9)
qt(.05,14)
qt(.01,10)
qt(.005,10)
qt(.005,9)
qnorm(1.6)
qt(.90,11)
pt(2.8)
pt(2.8)
pt(2.821, df=9)
pt(2.365, df=7)
pt(2.492, df=24)
pt(-2.797, df=24)
pt(-2.787, df=25)
pt(-2.787, df=25)
qt(.01, df=25)
pt(3.078, df=25)
pt(2.147, df=30)
qt(.05, df=25)
qt(.2, df=25)
qt(.0005, df=30)
pnorm(2.16)
qnorm(.0156)
pnorm(-2.16)
pnorm(-1.39)
pnorm(-1.49)
pnorm(-1.48)
pnorm(.58)
pnorm(-2.24)
pnorm(.2833)
pnorm(1.84)
pnorm(.90)
pnorm(.89)
pnorm(.91)
pnorm(-3.25)
pnorm(-3.16)
pt(.05,15)
pt(.025,15)
pt(.025,22)
before <- c(255,230,290,242,300,250,215,230,225,219,236,290,220)
after <- c(197,225,215,215,240,234,190,240,200,203,223,231,191)
t.test(before, after, paired=TRUE, alternative = "two-sided")
t.test(before, after, paired=TRUE, alternative = "two.sided")
pt(.02,12)
pnorm(4.08)
pnorm(4.14)
pnorm(.46)
pnorm(-3.10)
pnorm(-3.16)
pnorm(.44)
pt(.025,11)
pnorm(.025)
pnorm(.95)
pnorm(.05)
library(swirl)
swirl()
2
exit
quit
stop
stop()
clear
library(swirl)
swirl()
5+7
bye()
library(swirl)
swirl()
(0.5, 55, -10, 6)
(0.5 55 -10 6)
(0.5; 55; -10; 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Swirl")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
'y'
A vector of all the positive elements of y
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
v
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
library(swirl)
sswirl()
swirl()
library(swirl)
swirl()
Sys.Date()
mean(c(2, 4, 5))
"boring_function('My first function!')"
boring_function
mean(c(2, 4, 5))
"boring_function('My first function!')"
boring_function
library(wirl)
library(swirl)
swirl()
submit()
"boring_function('My first function!')"
boring_function
boring_function('My first function!')
boring_function
submit()
sum()
length(0)
length()
sum(boring_function())
my_mean(c(4, 5, 10))
my_mean()
my_mean
my_mean(c(4, 5, 10))
sum()
sum()
submit()
my_mean(c(4, 5, 10))
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5).
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
paste("Programming", "is", "fun!")
telegram()
submit()
mad_libs(adjective = "", place = "", noun = "")
submit()
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I'%p% 'love'%p% 'R!'"
info()
'I' %p% 'love' %p% 'R!'
libarar(swirl)
library(swirl)
swirl()
library(swirl)
swirl()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot()
boxplot(formula = mpg ~ cyl, data = mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
sizes <- c('Short','Tall','Grande','Venti')
NUMBERS <- c(0,5,10,15,20,25,30,35,40,45,50)
length(NUMBERS)
which(NUMBERS < 5)
sum(NUMBERS >= 40)
DIFFICULTY <- c("beginner", "expert", "legendary", "normal" )
as.factor(DIFFICULTY)
install.packages("rmarkdown")
getwd
getwd()
read.csv("pokemon_sample1.csv",header=TRUE)
data <- read.csv("pokemon_sample1.csv",header=TRUE)
mean(data$hp)
1-.94
.06/2
qnorm(.97)
1-.03
me <- 1.881*(26.6/sqrt(85))
me
mean(hp) - me
mean(data$hp) - me
mean(data$hp) + me
1-.90
.10/2
1-.05
qnorm(.95)
me <- 1.645*(26.6/sqrt(85))
me
mean(data$hp) - me
mean(data$hp) + me
pnorm(1.658)
pnorm(1.658, lower.tail = FALSE)
qnorm(.02)
qnorm(-.02)
power.t.test(n = 32, delta = 1200-1100, sig.level = 0.08, sd = 250, type = "one.sample", alternative = "one.sided")
power.t.test(n = 32, delta = 1200-1100, sig.level = 0.025, sd = 250, type = "one.sample", alternative = "one.sided")
power.t.test(n = 32, delta = 1200-1100, sig.level = NULL, sd = 250, power = 0.9, type = "one.sample", alternative = "one.sided")
power.t.test(n = 32, delta = 1200-1100, sig.level = NULL, sd = 250, power = 0.9, type = "one.sample", alternative = "one.sided")
power.t.test(n = NULL, delta = 1200-1100, sig.level = 0.05, sd = 250, power = 0.9, type = "one.sample", alternative = "one.sided")
shiny::runApp('cs424project1')
getwd()
runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
setwd("C:/College/CS 424 visualization and Visual Analytics/project1/cs424project1")
cityTable <- read.table(file = "CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.tsv", sep = "\t", header = TRUE, quote = "\"")
uicHalsted <- subset(cityTable, stationname == "UIC-Halsted")
View(uicHalsted)
write.csv(uicHalsted,"C:/College/CS 424 visualization and Visual Analytics/project1/cs424project1\\uicHalstedData.csv", row.names = FALSE)
shiny::runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
uicHalstedcsv <- read.csv("uicHalstedData.csv", header = TRUE)
uicHalstedcsv
View(uicHalstedcsv)
View(uicHalstedcsv)
runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
runApp('C:/College/CS 424 Visualization and Visual Analytics/project1/cs424project1')
